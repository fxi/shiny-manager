name: Build Single Executable Applications

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build-bundle:
    name: Bundle JavaScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build bundle
        run: npm run build

      - name: Upload bundled code
        uses: actions/upload-artifact@v4
        with:
          name: bundled-app
          path: dist/
          if-no-files-found: error

  build-sea:
    name: Build SEA
    needs: build-bundle
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
            output-name: shiny-manager-x64-linux
          - os: ubuntu-24.04-arm
            arch: arm64
            output-name: shiny-manager-arm64-linux
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21.x
          cache: npm

      - name: Download bundled app
        uses: actions/download-artifact@v4
        with:
          name: bundled-app
          path: dist/

      - name: Find Node
        id: find-node
        run: echo "node=$(which node)" >> $GITHUB_OUTPUT

      - name: SEA
        id: sea
        uses: bryopsida/node-sea-action@v1
        with:
          working-dir: dist
          output-dir: build
          executable-name: ${{ matrix.output-name }}
          sea-config-path: ../sea-config.json
          node-path: ${{ steps.find-node.outputs.node }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output-name }}
          path: dist/build/${{ matrix.output-name }}
          if-no-files-found: error

      - name: Upload to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/build/${{ matrix.output-name }}
          asset_name: ${{ matrix.output-name }}
          asset_content_type: application/octet-stream